{"version":3,"sources":["features/Navigation/navigationSlice.js","services/requestService.js","constants/index.js","app/lib/values.js","features/Events/eventsSlice.js","features/Competitors/competitorsSlice.js","app/reducer.js","app/lib/helpers.js","app/selectors.js","app/hooks/useInterval.js","features/AuthWall/AuthWall.js","app/lib/getCenterContentStyle.js","app/lib/getContentWidth.js","features/Navigation/TopNavigation/TopNavigation.js","app/styleHooks.js","app/lib/points.js","app/lib/year.js","features/WorkSpace/lib/util.js","app/lib/weights.js","app/hooks/useFilters.js","features/WorkSpace/GymnasticsList/GymnasticsList.js","features/WorkSpace/WorkSpace.js","features/Navigation/BottomNavigation/BottomNavigation.js","features/Events/EventList/EventList.js","features/Events/EventManager/util.js","features/Events/EventManager/EventManager.js","features/Competitors/CompetitorList/CompetitorList.js","features/Competitors/CompetitorManager/CompetitorManager.js","features/NoInternetWall/NoInternetWall.js","features/MainView/MainView.js","App.js","index.js","features/Navigation/TopNavigation/TopNavigation.module.css","features/Navigation/BottomNavigation/BottomNavigation.module.css","features/MainView/MainView.module.css"],"names":["steps","ActiveContent","ContentToStep","getStepFromContent","content","navigationSlice","createSlice","name","initialState","activeContent","activeStep","reducers","setActiveContent","state","action","payload","setActiveStep","step","keys","Object","i","length","key","getContentFromStep","actions","requestService","baseUrl","oAuth2_access_token","tokenExpiryDate","this","url","headers","Authorization","Promise","resolve","then","fetch","method","resp","json","catch","err","console","error","data","JSON","stringify","body","formBody","encodedKey","encodeURIComponent","encodedValue","push","join","encodeURI","ok","reject","username","password","postEncodeURI","grant_type","client_id","client_secret","access_token","expiryDate","Date","setSeconds","getSeconds","expires_in","success","Gender","FEMALE","MALE","Ages","Group","A","B","AgesPerGroup","Discipline","PUSH","PULL","SNATCH","CLEAN_AND_JERK","PULL_UP","T2B","SCHO","H1","LT","DR_M","SW","SD","PL","GYM","Exceptional","GYMNASTICS","getDraftEvent","id","date","toISOString","split","place","host","start","final","disciplines","values","reduce","r","e","gymnastics","competitorIds","getEvents","createAsyncThunk","ids","a","post","deleteEvent","get","saveEvent","event","eventsSlice","all","activeId","draft","resetEvents","setEventId","addCompetitorId","removeCompetitorId","activeEvent","splice","indexOf","editEvent","setName","setDate","setPlace","setHost","setStart","toggleFinal","toggleDiscipline","setGymnastics","group","extraReducers","fulfilled","Array","isArray","warn","Number","getDraftCompetitor","gender","year","weight","club","results","getCompetitors","deleteCompetitor","saveCompetitor","competitor","competitorsSlice","resetCompetitors","editCompetitor","setGender","setYear","setWeight","eventId","competitorId","setClub","setResult","discipline","result","reducer","navigation","events","competitors","defaultValues","ARRAY","OBJECT","FUNCTION","isObject","val","selectActiveEvent","selectActiveCompetitors","includes","selectEventIdsForYear","activeYear","filter","map","useInterval","interval","cb","invokeInitially","useState","active","setActive","idRef","useRef","useEffect","req","current","setTimeout","clearTimeout","AuthWall","open","setOpen","setPassword","errorText","setErrorText","validateAuth","useCallback","isAuthTokenValid","TOKEN_EXPIRY_SAFETY_MARGIN","resetTextField","Dialog","onClose","aria-labelledby","DialogContent","TextField","autoFocus","margin","label","className","type","fullWidth","value","onChange","target","onFocus","helperText","DialogActions","Button","variant","color","onClick","login","response","centerContentStyle","onResize","contentWidth","Math","min","round","window","innerWidth","width","getCenterContentStyle","addEventListener","ColorlibConnector","withStyles","alternativeLabel","top","backgroundImage","completed","line","height","border","backgroundColor","borderRadius","StepConnector","useColorlibStepIconStyles","makeStyles","root","zIndex","display","justifyContent","alignItems","cursor","boxShadow","ColorlibStepIcon","props","classes","icons","1","2","3","String","icon","TopNavigation","dispatch","useDispatch","useSelector","styles","Stepper","TopNavigationStepper","style","connector","Step","StepLabel","StepIconComponent","TopNavigationSpacer","useListStyles","theme","card","cardActive","palette","secondary","light","cardContent","gridTemplateColumns","cardActions","justifySelf","alignSelf","contrastText","grey","gymnasticsTag","primary","main","useManagerStyles","flexRow","gridRow","gridGap","spacer","flexShrink","marginTop","useWorkSpaceStyles","row","editor","editorEntry","flexWrap","editorIcon","editorPoints","marginLeft","gymnasticsResult","useFilterStyles","filterGroup","marginRight","createTable","inStart","inEnd","outStart","outEnd","roundTo","max","getters","calcPointsForExceptional","getPoints","disc","fn","getAge","birthYear","getFullYear","getBirthYear","age","getRanks","eventIds","competitionClasses","forEach","groupKey","ageClass","genderKey","curPoints","curRank","rankings","res","curResults","curRes","points","k","sort","b","rank","c","ranking","find","addRanks","weights","WeightType","weightDisciplines","useFilters","filters","filterCallback","setFilterCallback","filterList","setFilterList","element","every","ButtonGroup","prevState","undefined","GymnasticsList","gymnasticsList","gymResults","setGymResults","Typography","paragraph","FormControl","overflow","textOverflow","InputLabel","Select","labelId","MenuItem","PrintActionTypes","competitorsForPrint","WorkSpace","eventIdsForYear","competitorList","setCompetitorList","activeCompetitorId","setActiveCompetitorId","FilterComponent","sync","curCompetitorList","charCodeAt","Card","elevation","CardContent","bodyWeight","weightValue","getWeight","CardActions","BottomNavigation","speedDialOpen","setSpeedDialOpen","onCta","ctaIcon","ctaColor","s","Cta","Fab","aria-label","SpeedDial","ariaLabel","hidden","SpeedDialIcon","onOpen","direction","SpeedDialAction","tooltipTitle","blob","URL","createObjectURL","Blob","document","createElement","href","click","revokeObjectURL","fetchPrint","EventList","activeEventId","eventList","setEventList","deleteIndex","setDeleteIndex","refresh","getEventsOnMount","getTime","onEdit","stopPropagation","onDoubleClick","reverse","IconButton","parseCommaSeparation","input","replace","marginProp","EventManager","saveAndExit","parsedGymnastics","onKeyDown","noValidate","autoComplete","FormControlLabel","control","Switch","checked","inputProps","labelPlacement","FormGroup","Checkbox","ages","multiline","rowsMax","CompetitorList","selectedCompetitorIds","doSave","setDoSave","getCompetitorsOnMount","noActiveEvent","selected","CompetitorManager","NoInternetWall","textAlign","MainView","children","mainView","App","activeEventName","triggerRerender","resize","removeEventListener","title","ReactDOM","render","store","configureStore","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d4cf15d7.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const steps = [ 'Erstellen', 'Teilnehmer', 'Wettbewerb' ];\n\nexport const ActiveContent = {\n    EVENT_LIST: 'event-list',\n    EVENT_MANAGER: 'event-manager',\n    COMPETITOR_LIST: 'competitor-list',\n    COMPETITOR_MANAGER: 'competitor-manager',\n    WORK_SPACE: 'work-space'\n};\n\nconst ContentToStep = {\n    [ActiveContent.EVENT_LIST]: 'Erstellen',\n    [ActiveContent.EVENT_MANAGER]: 'Erstellen',\n    [ActiveContent.COMPETITOR_LIST]: 'Teilnehmer',\n    [ActiveContent.COMPETITOR_MANAGER]: 'Teilnehmer',\n    [ActiveContent.WORK_SPACE]: 'Wettbewerb'\n};\n\nfunction getStepFromContent(content) {\n    return ContentToStep[content];\n}\n\nfunction getContentFromStep(step) {\n    const keys = Object.keys(ContentToStep);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (ContentToStep[key] === step) {\n            return key;\n        }\n    }\n}\n\nexport const navigationSlice = createSlice({\n    name: 'navigation',\n    initialState: {\n        activeContent: ActiveContent.EVENT_LIST,\n        activeStep: getStepFromContent(ActiveContent.EVENT_LIST)\n    },\n    reducers: {\n        setActiveContent: (state, action) => {\n            state.activeContent = action.payload;\n            state.activeStep = getStepFromContent(action.payload);\n        },\n        setActiveStep: (state, action) => {\n            state.activeContent = getContentFromStep(action.payload);\n            state.activeStep = action.payload;\n        }\n    }\n});\n\nexport const {\n    setActiveContent,\n    setActiveStep\n} = navigationSlice.actions;\n\nexport default navigationSlice.reducer;\n","import { TOKEN_EXPIRY_SAFETY_MARGIN } from '../constants';\n\nfunction encodeURI(data) {\n    const formBody = [];\n    for (const key in data) {\n        const encodedKey = encodeURIComponent(key);\n        const encodedValue = encodeURIComponent(data[key]);\n        formBody.push(`${encodedKey}=${encodedValue}`);\n    }\n    return formBody.join('&');\n}\n\n\nclass RequestService {\n    baseUrl = '';\n    oAuth2_access_token = '';\n    tokenExpiryDate = null;\n\n    constructor() {\n        this.baseUrl = process.env.NODE_ENV === 'development'\n            ? 'http://127.0.0.1'\n            : 'https://wolke.glencoden.de';\n    }\n\n    get(url) {\n        const headers = {'Content-Type': 'application/json; charset=utf-8'};\n        if (this.oAuth2_access_token) {\n            headers.Authorization = `Bearer ${this.oAuth2_access_token}`;\n        }\n        return Promise.resolve()\n            .then(() => fetch(url, { method: 'GET', headers }))\n            .then(resp => resp.json())\n            .catch(err => console.error('Request Service: ', err));\n    }\n\n    post(url, data) {\n        const headers = {'Content-Type': 'application/json; charset=utf-8'};\n        if (this.oAuth2_access_token) {\n            headers.Authorization = `Bearer ${this.oAuth2_access_token}`;\n        }\n        return Promise.resolve()\n            .then(() => JSON.stringify(data))\n            .then(body => fetch(url, {\n                method: 'POST',\n                headers,\n                body\n            }))\n            .then(resp => resp.json())\n            .catch(err => console.error('Request Service: ', err));\n    }\n\n    postEncodeURI(url, data) {\n        return Promise.resolve()\n            .then(() => encodeURI(data))\n            .then(body => fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' },\n                body\n            }))\n            .then(resp => {\n                if (resp.ok) {\n                    return resp.json();\n                }\n                return Promise.reject(resp);\n            });\n    }\n\n    login(username, password) {\n        return this.postEncodeURI(`${this.baseUrl}/auth/login`, { username, password, grant_type: 'password', client_id: null, client_secret: null })\n            .then(resp => {\n                this.oAuth2_access_token = resp.access_token;\n                const expiryDate = new Date();\n                expiryDate.setSeconds(expiryDate.getSeconds() + resp.expires_in - TOKEN_EXPIRY_SAFETY_MARGIN);\n                this.tokenExpiryDate = expiryDate;\n                return {\n                    success: true\n                };\n            });\n    }\n\n    isAuthTokenValid() {\n        return new Date() < this.tokenExpiryDate;\n    }\n}\n\nexport const requestService = new RequestService();","export const contentWidthFromVW = 0.95;\nexport const maxContentWidth = 640;\n\nexport const TOKEN_EXPIRY_SAFETY_MARGIN = 60; // seconds\n\nexport const O_AUTH_2_USER_NAME = 'michi_mueller';","export const Gender = {\n    FEMALE: 'W',\n    MALE: 'M'\n};\n\nexport const Ages = [ 9, 10, 11, 12, 13, 14 ];\n\nexport const Group = {\n    A: 'Kinder',\n    B: 'Schüler'\n};\n\nexport const AgesPerGroup = {\n    [Group.A]: [ 9, 10, 11, 12 ],\n    [Group.B]: [ 13, 14 ]\n};\n\nexport const Discipline = {\n    PUSH: 'Bankdrücken',\n    PULL: 'Zug liegend',\n    SNATCH: 'Reißen',\n    CLEAN_AND_JERK: 'Stoßen',\n    PULL_UP: 'Klimmziehen',\n    T2B: 'Anristen',\n    SCHO: 'SCHO',\n    H1: 'H1',\n    LT: 'LT',\n    DR_M: '30m',\n    SW: 'SW',\n    SD: 'SD',\n    PL: 'PL',\n    GYM: 'Turnen'\n};\n\nexport const Exceptional = {\n    GYMNASTICS: Discipline.GYM\n};","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { requestService } from '../../services/requestService';\nimport { Discipline, Group } from '../../app/lib/values';\n\nfunction getDraftEvent() {\n    return {\n        id: 0,\n        name: '',\n        date: new Date().toISOString().split('T')[0],\n        place: '',\n        host: '',\n        start: '16:30',\n        final: false,\n        disciplines: Object.values(Discipline).reduce((r, e) => ({ ...r, [e]: false }), {}),\n        gymnastics: {\n            [Group.A]: '',\n            [Group.B]: ''\n        },\n        competitorIds: []\n    };\n}\n\nexport const getEvents = createAsyncThunk(\n    'events/getEvents',\n    async ids => {\n        return await requestService.post(`${requestService.baseUrl}/tsc/get_events`, ids);\n    }\n);\n\nexport const deleteEvent = createAsyncThunk(\n    'events/deleteEvent',\n    async id => {\n        return await requestService.get(`${requestService.baseUrl}/tsc/delete_event/${id}`);\n    }\n);\n\nexport const saveEvent = createAsyncThunk(\n    'events/saveEvent',\n    async event => {\n        return await requestService.post(`${requestService.baseUrl}/tsc/upsert_event`, event);\n    }\n);\n\nexport const eventsSlice = createSlice({\n    name: 'events',\n    initialState: {\n        all: {},\n        activeId: 0,\n        draft: getDraftEvent()\n    },\n    reducers: {\n        resetEvents: state => {\n            state.activeId = 0;\n            state.draft = getDraftEvent();\n        },\n        setEventId: (state, action) => {\n            state.activeId = action.payload;\n        },\n        addCompetitorId: (state, action) => {\n            if (!state.activeId) {\n                return;\n            }\n            state.all[state.activeId].competitorIds.push(action.payload);\n        },\n        removeCompetitorId: (state, action) => {\n            if (!state.activeId) {\n                return;\n            }\n            const activeEvent = state.all[state.activeId];\n            activeEvent.competitorIds.splice(activeEvent.competitorIds.indexOf(action.payload), 1);\n        },\n        editEvent: (state, action) => {\n            state.draft = state.all[action.payload];\n        },\n        setName: (state, action) => {\n            state.draft.name = action.payload;\n        },\n        setDate: (state, action) => {\n            state.draft.date = action.payload;\n        },\n        setPlace: (state, action) => {\n            state.draft.place = action.payload;\n        },\n        setHost: (state, action) => {\n            state.draft.host = action.payload;\n        },\n        setStart: (state, action) => {\n            state.draft.start = action.payload;\n        },\n        toggleFinal: state => {\n            state.draft.final = !state.draft.final;\n        },\n        toggleDiscipline: (state, action) => {\n            state.draft.disciplines[action.payload] = !state.draft.disciplines[action.payload];\n        },\n        setGymnastics: (state, action) => {\n            if (!action.payload.group) {\n                return;\n            }\n            state.draft.gymnastics[action.payload.group] = action.payload.gymnastics;\n        }\n    },\n    extraReducers: {\n        [getEvents.fulfilled]: (state, action) => {\n            if (!Array.isArray(action.payload)) {\n                console.warn('error getting events');\n                return;\n            }\n            state.all = action.payload.reduce((r, e) => ({ ...r, [e.id]: e }), {});\n        },\n        [deleteEvent.fulfilled]: (state, action) => {\n            if (!action.payload?.success) {\n                console.warn('error deleting event');\n                return;\n            }\n            if (state.activeId === Number(action.payload.id)) {\n                state.activeId = 0;\n            }\n            delete state.all[action.payload.id];\n        },\n        [saveEvent.fulfilled]: (state, action) => {\n            if (!action.payload?.success) {\n                console.warn('error saving event');\n                return;\n            }\n            state.all[action.payload.event.id] = action.payload.event;\n            state.activeId = action.payload.event.id;\n            state.draft = getDraftEvent();\n        }\n    }\n});\n\nexport const {\n    resetEvents,\n    setEventId,\n    addCompetitorId,\n    removeCompetitorId,\n    editEvent,\n    setName,\n    setDate,\n    setPlace,\n    setHost,\n    setStart,\n    toggleFinal,\n    toggleDiscipline,\n    setGymnastics\n} = eventsSlice.actions;\n\nexport default eventsSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { requestService } from '../../services/requestService';\nimport { Gender } from '../../app/lib/values';\n\nfunction getDraftCompetitor() {\n    return {\n        id: 0,\n        name: '',\n        gender: Gender.FEMALE,\n        year: new Date().toISOString().split('T')[0].split('-')[0] - 9,\n        weight: {},\n        club: '',\n        results: {}\n    };\n}\n\nexport const getCompetitors = createAsyncThunk(\n    'competitors/getCompetitors',\n    async ids => {\n        return await requestService.post(`${requestService.baseUrl}/tsc/get_competitors`, ids);\n    }\n);\n\nexport const deleteCompetitor = createAsyncThunk(\n    'competitors/deleteCompetitor',\n    async id => {\n        return await requestService.get(`${requestService.baseUrl}/tsc/delete_competitor/${id}`);\n    }\n);\n\nexport const saveCompetitor = createAsyncThunk(\n    'competitors/saveCompetitor',\n    async competitor => {\n        return await requestService.post(`${requestService.baseUrl}/tsc/upsert_competitor`, competitor);\n    }\n);\n\nexport const competitorsSlice = createSlice({\n    name: 'competitors',\n    initialState: {\n        all: {},\n        draft: getDraftCompetitor()\n    },\n    reducers: {\n        resetCompetitors: state => {\n            state.draft = getDraftCompetitor();\n        },\n        editCompetitor: (state, action) => {\n            state.draft = state.all[action.payload];\n        },\n        setName: (state, action) => {\n            state.draft.name = action.payload;\n        },\n        setGender: (state, action) => {\n            state.draft.gender = action.payload;\n        },\n        setYear: (state, action) => {\n            state.draft.year = action.payload;\n        },\n        setWeight: (state, action) => {\n            if (!action.payload.eventId) {\n                console.warn('you tried to set a weight without an event id');\n                return;\n            }\n            if (!action.payload.competitorId) {\n                console.warn('you tried to set a weight without a competitor id');\n                return;\n            }\n            state.all[action.payload.competitorId].weight[action.payload.eventId] = action.payload.weight;\n        },\n        setClub: (state, action) => {\n            state.draft.club = action.payload;\n        },\n        setResult: (state, action) => {\n            if (!action.payload.eventId) {\n                console.warn('you tried to set a result without an event id');\n                return;\n            }\n            if (!action.payload.competitorId) {\n                console.warn('you tried to set a result without a competitor id');\n                return;\n            }\n            if (!state.all[action.payload.competitorId].results[action.payload.eventId]) {\n                state.all[action.payload.competitorId].results[action.payload.eventId] = {};\n            }\n            state.all[action.payload.competitorId].results[action.payload.eventId][action.payload.discipline] = action.payload.result;\n        }\n    },\n    extraReducers: {\n        [getCompetitors.fulfilled]: (state, action) => {\n            if (!Array.isArray(action.payload)) {\n                console.warn('error getting competitors');\n                return;\n            }\n            state.all = action.payload.reduce((r, e) => ({ ...r, [e.id]: e }), state.all);\n        },\n        [deleteCompetitor.fulfilled]: (state, action) => {\n            if (!action.payload?.success) {\n                console.warn('error deleting competitor');\n                return;\n            }\n            delete state.all[action.payload.id];\n        },\n        [saveCompetitor.fulfilled]: (state, action) => {\n            if (!action.payload?.success) {\n                console.warn('error saving competitor');\n                return;\n            }\n            state.all[action.payload.competitor.id] = action.payload.competitor;\n            state.draft = getDraftCompetitor();\n        }\n    }\n});\n\nexport const {\n    resetCompetitors,\n    editCompetitor,\n    setName,\n    setGender,\n    setYear,\n    setWeight,\n    setClub,\n    setResult\n} = competitorsSlice.actions;\n\nexport default competitorsSlice.reducer;\n","import navigation from '../features/Navigation/navigationSlice';\nimport events from '../features/Events/eventsSlice';\nimport competitors from '../features/Competitors/competitorsSlice';\n\nconst reducer = {\n    navigation,\n    events,\n    competitors,\n};\n\nexport default reducer;","export const defaultValues = {\n    ARRAY: [],\n    OBJECT: {},\n    FUNCTION: () => {}\n}\n\nexport function isObject(val) {\n    return val !== null && typeof val !== 'function' && typeof val === 'object' && !Array.isArray(val);\n}","import { defaultValues } from './lib/helpers';\n\nexport const selectActiveEvent = state => state.events.activeId ? state.events.all[state.events.activeId] : defaultValues.OBJECT;\n\nexport const selectActiveCompetitors = state => {\n    const activeEvent = selectActiveEvent(state);\n    const competitorIds = activeEvent.competitorIds || [];\n    return Object.keys(state.competitors.all).reduce((r, e) => competitorIds.includes(Number(e)) ? [ ...r, state.competitors.all[e] ] : r, []);\n};\n\nexport const selectEventIdsForYear = state => {\n    const activeYear = selectActiveEvent(state).date?.split('-')[0];\n    if (!activeYear) {\n        return defaultValues.ARRAY;\n    }\n    return Object.values(state.events.all)\n        .filter(e => e.date?.split('-')[0] === activeYear)\n        .map(e => e.id);\n};","import { useState, useRef, useEffect } from 'react';\n\n\nfunction useInterval(interval, cb, invokeInitially = true) {\n    const [ active, setActive ] = useState(true);\n    const idRef = useRef({ id: 0 });\n\n    useEffect(() => {\n        if (!active) {\n            return;\n        }\n        const req = () => {\n            cb();\n            idRef.current.id = setTimeout(() => req(), interval * 1000);\n        };\n        if (invokeInitially) {\n            req();\n        }\n        return () => clearTimeout(idRef.current.id);\n    }, [ active, interval, cb, invokeInitially ]);\n\n    return [ active, setActive ];\n}\n\nexport default useInterval;","import { useState, useCallback } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core';\nimport { requestService } from '../../services/requestService';\nimport useInterval from '../../app/hooks/useInterval';\nimport { O_AUTH_2_USER_NAME, TOKEN_EXPIRY_SAFETY_MARGIN } from '../../constants';\n\n\nfunction AuthWall() {\n    const [ open, setOpen ] = useState(true);\n    const [ password, setPassword ] = useState('');\n    const [ errorText, setErrorText ] = useState('');\n\n    const validateAuth = useCallback(\n        () => {\n            if (requestService.isAuthTokenValid()) {\n                return\n            }\n            setOpen(true);\n        },\n        []\n    );\n\n    useInterval(TOKEN_EXPIRY_SAFETY_MARGIN / 2, validateAuth);\n\n    const resetTextField = () => {\n        setPassword('');\n        setErrorText('');\n    };\n\n    const onLoginButtonClick = () => {\n        requestService.login(O_AUTH_2_USER_NAME, password)\n            .then(response => {\n                if (!response.success) {\n                    setErrorText('Unbekannter Fehler');\n                    return;\n                }\n                setOpen(false);\n                resetTextField();\n            })\n            .catch(() => {\n                setErrorText('Falsches Passwort');\n            });\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={() => {}}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"normal\"\n                    id=\"pw\"\n                    label={<span className=\"material-icons\">vpn_key</span>}\n                    type=\"password\"\n                    fullWidth\n                    value={password}\n                    onChange={({ target }) => setPassword(target.value)}\n                    onFocus={resetTextField}\n                    error={!!errorText}\n                    helperText={errorText}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={onLoginButtonClick}\n                >\n                    Login\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default AuthWall;","import { getContentWidth } from './getContentWidth';\n\nlet centerContentStyle = {};\n\nfunction onResize() {\n    const contentWidth = getContentWidth();\n    centerContentStyle = {\n        width: `${contentWidth}px`,\n        margin: `0 ${(window.innerWidth - contentWidth) / 2}px`\n    };\n}\n\nonResize();\n\nwindow.addEventListener('resize', onResize);\n\nexport function getCenterContentStyle() {\n    return centerContentStyle;\n}","import { contentWidthFromVW, maxContentWidth } from '../../constants';\n\nexport function getContentWidth() {\n    return Math.min(maxContentWidth, Math.round(contentWidthFromVW * window.innerWidth));\n}","import { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Stepper, Step, StepLabel, StepConnector } from '@material-ui/core';\nimport { steps, setActiveStep } from '../navigationSlice';\nimport styles from './TopNavigation.module.css';\nimport { getCenterContentStyle } from '../../../app/lib/getCenterContentStyle';\n\nconst topNavBackgroundColor = '#fff';\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 22\n    },\n    active: {\n        '& $line': {\n            backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n        }\n    },\n    completed: {\n        '& $line': {\n            backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n        }\n    },\n    line: {\n        height: 3,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1\n    }\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: topNavBackgroundColor,\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer'\n    },\n    active: {\n        backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n    },\n    completed: {\n        backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n    }\n});\n\nfunction ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const { active, completed } = props;\n\n    const icons = {\n        1: <span className=\"material-icons\">event_note</span>,\n        2: <span className=\"material-icons\">people_alt</span>,\n        3: <span className=\"material-icons\">emoji_events</span>\n    };\n\n    return (\n        <div\n            className={`${classes.root}${active ? ` ${classes.active}` : ''}${completed ? ` ${classes.completed}` : ''}`}>\n            {icons[String(props.icon)]}\n        </div>\n    );\n}\n\n\nfunction TopNavigation() {\n    const dispatch = useDispatch();\n    const activeStep = useSelector(state => state.navigation.activeStep);\n\n    return (\n        <>\n            <div className={styles.TopNavigation}>\n                <Stepper\n                    className={styles.TopNavigationStepper}\n                    style={getCenterContentStyle()}\n                    alternativeLabel\n                    activeStep={steps.indexOf(activeStep)}\n                    connector={<ColorlibConnector/>}\n                >\n                    {steps.map(step => (\n                        <Step\n                            key={step}\n                            onClick={() => dispatch(setActiveStep(step))}\n                        >\n                            <StepLabel StepIconComponent={ColorlibStepIcon}/>\n                        </Step>\n                    ))}\n                </Stepper>\n            </div>\n            <div className={styles.TopNavigationSpacer}/>\n        </>\n    );\n}\n\nexport default TopNavigation;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useListStyles = makeStyles(theme => ({\n    card: {\n        margin: '10px 0'\n    },\n    cardActive: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    cardContent: {\n        display: 'grid',\n        gridTemplateColumns: 'auto 160px'\n    },\n    cardActions: {\n        justifySelf: 'end',\n        alignSelf: 'start'\n    },\n    contrastText: {\n        color: theme.palette.grey['100']\n    },\n    gymnasticsTag: {\n        color: theme.palette.primary.main\n    }\n}));\n\nexport const useManagerStyles = makeStyles(theme => ({\n    card: {\n        margin: '10px 0'\n    },\n    flexRow: {\n        display: 'flex'\n    },\n    gridRow: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridGap: '10px'\n    },\n    spacer: {\n        width: '10px',\n        flexShrink: 0\n    },\n    marginTop: {\n        marginTop: '15px'\n    }\n}));\n\nexport const useWorkSpaceStyles = makeStyles(theme => ({\n    card: {\n        margin: '10px 0'\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    editor: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridGap: '10px'\n    },\n    editorEntry: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center'\n    },\n    editorIcon: {\n        color: theme.palette.grey['300']\n    },\n    editorPoints: {\n        marginLeft: '10px'\n    },\n    gymnasticsResult: {\n        alignSelf: 'center',\n        display: 'flex',\n        alignItems: 'center'\n    },\n    marginTop: {\n        marginTop: '15px'\n    }\n}));\n\nexport const useFilterStyles = makeStyles(theme => ({\n    filter: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '10px'\n    },\n    filterGroup: {\n        marginRight: '10px'\n    }\n}));","import { Discipline, Exceptional } from './values';\n\nfunction createTable(inStart, inEnd, outStart, outEnd, roundTo = 1) {\n    return function(val) {\n        return Math.max(Math.round(((outStart - outEnd) * (val - inStart) / (inStart - inEnd) + outStart) / roundTo), 0) * roundTo;\n    }\n}\n\nconst getters = {\n    // Jan 2021: 15 reps with 2 points each\n    [Discipline.PUSH]: createTable(0, 15, 0, 30),\n    [Discipline.PULL]: createTable(0, 15, 0, 30),\n    [Discipline.PULL_UP]: createTable(0, 15, 0, 30),\n    [Discipline.T2B]: createTable(0, 15, 0, 30),\n    // Jan 2021: values from printed table\n    [Discipline.H1]: createTable(10, 15.7, 45, 16),\n    [Discipline.LT]: createTable(11, 16, 50, 0),\n    [Discipline.DR_M]: createTable(4.3, 6.3, 40, 0),\n    [Discipline.SW]: createTable(1.35, 2.85, 0, 50),\n    [Discipline.SD]: createTable(4, 9, 0, 50),\n    [Discipline.SCHO]: createTable(3, 13, 0, 50),\n    [Discipline.PL]: createTable(9, 14, 50, 0),\n    // Jan 2021: coach inputs gymnastics points sum, result outputs x3\n    [Discipline.GYM]: createTable(0, 10, 0, 30, 0.5),\n    [Discipline.SNATCH]: createTable(0, 10, 0, 30, 0.5),\n    [Discipline.CLEAN_AND_JERK]: createTable(0, 10, 0, 30, 0.5),\n};\n\nexport const calcPointsForExceptional = {\n    [Exceptional.GYMNASTICS]: result => Object.values(result).reduce((r, e) => r + e, 0)\n};\n\nexport function getPoints(disc, result) {\n    const fn = getters[disc];\n    if (typeof fn !== 'function') {\n        return 0;\n    }\n    if (Object.values(Exceptional).includes(disc)) {\n        result = calcPointsForExceptional[disc](result);\n    }\n    return fn(result);\n}\n","export function getAge(birthYear) {\n    return new Date().getFullYear() - Number(birthYear);\n}\n\nexport function getBirthYear(age) {\n    return new Date().getFullYear() - age;\n}","import { getPoints } from '../../../app/lib/points';\nimport { AgesPerGroup, Gender, Group } from '../../../app/lib/values';\nimport { getAge } from '../../../app/lib/year';\n\nfunction addRanks(competitors, eventId) {\n    const eventIds = Array.isArray(eventId) ? eventId : [ eventId ];\n    let curPoints = -1;\n    let curRank = 1;\n    const rankings = competitors\n        .reduce((r, e) => {\n            const results = eventIds.reduce((res, id) => {\n                const curResults = e.results[id];\n                if (!curResults) {\n                    return r;\n                }\n                Object.keys(curResults).forEach(curRes => {\n                    if (typeof r[curRes] !== 'number') {\n                        r[curRes] = curResults[curRes];\n                        return;\n                    }\n                    r[curRes] = r[curRes] + curResults[curRes];\n                });\n                return r;\n            }, {});\n            return [\n                ...r,\n                {\n                    id: e.id,\n                    points: Object.keys(results).reduce((r, k) => results[k] ? r + getPoints(k, results[k]) : r, 0)\n                }\n            ];\n        }, [])\n        .sort((a, b) => b.points - a.points)\n        .map(e => {\n            if (curPoints > e.points) {\n                curRank++;\n                curPoints = e.points;\n            }\n            if (curPoints === -1) {\n                curPoints = e.points;\n            }\n            return {\n                ...e,\n                rank: curRank\n            };\n        });\n    return competitors.map(c => {\n        const ranking = rankings.find(e => e.id === c.id);\n        const { points, rank } = ranking;\n        return {\n            ...c,\n            points,\n            rank\n        };\n    });\n}\n\nexport function getRanks(competitors, eventIds) {\n    const competitionClasses = [];\n    Object.values(Group).forEach(groupKey => {\n        const ageClass = competitors.filter(e => AgesPerGroup[groupKey].includes(getAge(e.year)));\n        Object.values(Gender).forEach(genderKey => {\n            competitionClasses.push(ageClass.filter(e => genderKey === e.gender));\n        });\n    });\n    return competitionClasses.reduce((r, e) => [ ...r, ...addRanks(e, eventIds) ], []);\n}\n","import { Gender, Ages, Discipline } from './values';\nimport { getAge } from './year';\n\nconst weights = {\n    [Gender.FEMALE]: {\n        [Discipline.SCHO]: [ 2, 2, 2, 2, 3, 3 ],\n        [Discipline.PUSH]: [ 40, 45, 50, 55, 60, 65 ],\n        [Discipline.PULL]: [ 40, 45, 50, 50, 55, 60 ]\n    },\n    [Gender.MALE]: {\n        [Discipline.SCHO]: [ 2, 2, 3, 3, 4, 4 ],\n        [Discipline.PUSH]: [ 45, 50, 60, 65, 70, 75 ],\n        [Discipline.PULL]: [ 45, 50, 55, 60, 65, 70 ]\n    }\n};\n\nconst WeightType = {\n    KG: 'kg',\n    PERCENT: 'percent'\n};\n\nconst weightDisciplines = {\n    [Discipline.SCHO]: WeightType.KG,\n    [Discipline.PUSH]: WeightType.PERCENT,\n    [Discipline.PULL]: WeightType.PERCENT\n};\n\nexport function getWeight(birthYear, gender, bodyWeight, discipline) {\n    if (!weightDisciplines[discipline]) {\n        return 0;\n    }\n    const age = getAge(birthYear);\n    const weightValue = weights[gender][discipline][Ages.indexOf(age)];\n    switch (weightDisciplines[discipline]) {\n        case WeightType.KG:\n            return weightValue;\n        case WeightType.PERCENT:\n            return Math.round(bodyWeight * weightValue / 100);\n        default:\n    }\n}\n","import { useFilterStyles } from '../styleHooks';\nimport { useEffect, useState } from 'react';\nimport { Button, ButtonGroup } from '@material-ui/core';\n\nfunction useFilters(filters) {\n    const classes = useFilterStyles();\n\n    const [ filterCallback, setFilterCallback ] = useState(() => () => true);\n    const [ filterList, setFilterList ] = useState([]);\n\n    useEffect(() => {\n        setFilterCallback(() => element => filterList.every(fn => typeof fn === 'function' ? fn(element) : true));\n    }, [ filterList, setFilterCallback ]);\n\n    const FilterComponent = () => (\n        <div className={classes.filter}>\n            {filters.map((filterGroup, i) => {\n                return (\n                    <ButtonGroup\n                        variant=\"contained\"\n                        key={i}\n                        className={classes.filterGroup}\n                    >\n                        {Object.keys(filterGroup).map(name => {\n                            const active = filterList[i] === filterGroup[name];\n                            return (\n                                <Button\n                                    key={name}\n                                    color={active ? 'primary' : 'default'}\n                                    onClick={() => setFilterList(prevState => {\n                                        const result = [ ...prevState ];\n                                        if (active) {\n                                            result[i] = undefined;\n                                        } else {\n                                            result[i] = filterGroup[name];\n                                        }\n                                        return result;\n                                    })}\n                                >\n                                    {name}\n                                </Button>\n                            );\n                        })}\n                    </ButtonGroup>\n                );\n            })}\n        </div>\n    );\n\n    return [ filterCallback, FilterComponent ];\n}\n\nexport default useFilters;","import { useDispatch } from 'react-redux';\nimport { useWorkSpaceStyles } from '../../../app/styleHooks';\nimport { AgesPerGroup, Exceptional, Group } from '../../../app/lib/values';\nimport { getAge } from '../../../app/lib/year';\nimport { useEffect, useState } from 'react';\nimport { setResult } from '../../Competitors/competitorsSlice';\nimport { getPoints } from '../../../app/lib/points';\nimport { FormControl, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\n\n\nfunction GymnasticsList({ event, competitor }) {\n    const dispatch = useDispatch();\n    const classes = useWorkSpaceStyles();\n\n    const results = competitor.results?.[event.id]?.[Exceptional.GYMNASTICS];\n    const gymnastics = event.gymnastics[Object.values(Group).find(e => AgesPerGroup[e].includes(getAge(competitor.year)))];\n    const gymnasticsList = gymnastics.split(', ').filter(e => !!e);\n\n    const [ gymResults, setGymResults ] = useState(results ? results : gymnasticsList.reduce((r, e) => ({ ...r, [e]: 0 }), {}));\n\n    useEffect(() => {\n        dispatch(setResult({\n            eventId: event.id,\n            competitorId: competitor.id,\n            discipline: Exceptional.GYMNASTICS,\n            result: gymResults\n        }))\n    }, [ event.id, competitor.id, dispatch, gymResults ]);\n\n    if (!gymnastics.length) {\n        return null;\n    }\n\n    const points = getPoints(Exceptional.GYMNASTICS, gymResults);\n\n    return (\n        <>\n            <Typography variant=\"overline\" paragraph className={classes.marginTop}>\n                {Exceptional.GYMNASTICS}\n            </Typography>\n            <div className={classes.editor}>\n                {gymnasticsList\n                    .map(name => (\n                        <FormControl key={name} style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                            <InputLabel id={`${name}-label`}>{name}</InputLabel>\n                            <Select\n                                labelId={`${name}-label`}\n                                id={`${name}`}\n                                value={gymResults[name]}\n                                onChange={event => setGymResults(prevState => {\n                                    const result = { ...prevState };\n                                    result[name] = event.target.value;\n                                    return result;\n                                })}\n                            >\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={1.5}>1,5</MenuItem>\n                                <MenuItem value={1}>1</MenuItem>\n                                <MenuItem value={0.5}>0,5</MenuItem>\n                                <MenuItem value={0}>0</MenuItem>\n                            </Select>\n                        </FormControl>\n                    ))\n                }\n                <div className={classes.gymnasticsResult}>\n                    <span className={`material-icons ${classes.editorIcon}`}>\n                        play_arrow\n                    </span>\n                    <Typography color=\"primary\" display=\"inline\" className={classes.editorPoints}>\n                        {points ? points : '--'}\n                    </Typography>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default GymnasticsList;","import { useEffect, useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Card, CardActions, CardContent, TextField, Typography } from '@material-ui/core';\nimport { selectActiveEvent, selectActiveCompetitors, selectEventIdsForYear } from '../../app/selectors';\nimport { getCompetitors, saveCompetitor, setResult, setWeight } from '../Competitors/competitorsSlice';\nimport { useWorkSpaceStyles } from '../../app/styleHooks';\nimport { getPoints } from '../../app/lib/points';\nimport { getRanks } from './lib/util';\nimport { defaultValues } from '../../app/lib/helpers';\nimport { AgesPerGroup, Gender, Group, Exceptional } from '../../app/lib/values';\nimport { getAge } from '../../app/lib/year';\nimport { getWeight } from '../../app/lib/weights';\nimport useFilters from '../../app/hooks/useFilters';\nimport useInterval from '../../app/hooks/useInterval';\nimport GymnasticsList from './GymnasticsList/GymnasticsList';\nimport { requestService } from '../../services/requestService';\n\nexport const PrintActionTypes = {\n    CERTIFICATES: 'certificates',\n    PROTOCOL: 'protocol'\n};\n\nlet competitorsForPrint = [];\n\nexport function fetchPrint(type) {\n    const body = {};\n    let url;\n    switch (type) {\n        case PrintActionTypes.CERTIFICATES:\n            body.competitors = competitorsForPrint;\n            url = `${requestService.baseUrl}/tsc/print_certificates`;\n            break;\n        case PrintActionTypes.PROTOCOL:\n            body.competitors = competitorsForPrint;\n            url = `${requestService.baseUrl}/tsc/print_protocol`;\n            break;\n        default:\n    }\n    fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json; charset=utf-8' },\n        body: JSON.stringify(body)\n    })\n        .then(response => response.blob())\n        .then(blob => {\n            const url = URL.createObjectURL(new Blob([ blob ], { type: 'application/pdf' }));\n            const a = document.createElement('a');\n            a.href = url;\n            a.target = '_blank';\n            a.click();\n            setTimeout(() => URL.revokeObjectURL(url), 100);\n        })\n        .catch(err => console.error(err));\n}\n\nconst filters = [\n    {\n        [Gender.FEMALE]: competitor => competitor.gender === Gender.FEMALE,\n        [Gender.MALE]: competitor => competitor.gender === Gender.MALE\n    },\n    {\n        [Group.A]: competitor => AgesPerGroup[Group.A].includes(getAge(competitor.year)),\n        [Group.B]: competitor => AgesPerGroup[Group.B].includes(getAge(competitor.year))\n    }\n];\n\nconst inputMargin = 'dense';\nconst syncTime = 5;\n\n\nfunction WorkSpace() {\n    const dispatch = useDispatch();\n    const activeEvent = useSelector(selectActiveEvent);\n    const competitors = useSelector(selectActiveCompetitors);\n    const eventIdsForYear = useSelector(selectEventIdsForYear);\n    const classes = useWorkSpaceStyles();\n\n    const [ competitorList, setCompetitorList ] = useState([]);\n    const [ activeCompetitorId, setActiveCompetitorId ] = useState(0);\n\n    const [ filterCallback, FilterComponent ] = useFilters(filters);\n\n    const competitorIds = activeEvent?.competitorIds || defaultValues.ARRAY;\n    const sync = useCallback(() => dispatch(getCompetitors(competitorIds.filter(id => id !== activeCompetitorId))), [ dispatch, activeCompetitorId, competitorIds ]);\n\n    useInterval(syncTime, sync);\n\n    useEffect(() => {\n        if (!Array.isArray(competitors)) {\n            return;\n        }\n        const curCompetitorList = getRanks(competitors, activeEvent.final ? eventIdsForYear : activeEvent.id)\n            .sort((a, b) => a.name.charCodeAt(0) - b.name.charCodeAt(0));\n        setCompetitorList(curCompetitorList);\n    }, [ activeEvent.id, competitors, activeEvent.final ]); // eventIdsForYear will be the same unless usage around new year\n\n    competitorsForPrint = competitorList;\n\n    if (!activeEvent.id) {\n        return null;\n    }\n\n    return (\n        <div>\n            <FilterComponent />\n            {!!competitorList.length && competitorList.filter(filterCallback).map((competitor, i) => {\n                const active = activeCompetitorId === competitor.id;\n                return (\n                    <Card\n                        key={i}\n                        className={`${classes.card}`}\n                        elevation={3}\n                        onClick={() => {\n                            if (active) {\n                                return;\n                            }\n                            if (activeCompetitorId) {\n                                dispatch(saveCompetitor(competitors.find(e => e.id === activeCompetitorId)));\n                            }\n                            setActiveCompetitorId(competitor.id);\n                        }}\n                    >\n                        <CardContent>\n                            <div className={classes.row}>\n                                <Typography variant=\"overline\" color=\"textSecondary\" display=\"block\">\n                                    {`${competitor.year} | ${competitor.gender}${competitor.weight[activeEvent.id] ? ` | ${competitor.weight[activeEvent.id]} kg` : ''}`}\n                                </Typography>\n                                <Typography variant=\"overline\" color=\"textSecondary\" display=\"block\">\n                                    Punkte {competitor.points}\n                                </Typography>\n                            </div>\n                            <div className={classes.row}>\n                                <Typography variant=\"h6\" color=\"textPrimary\">\n                                    {competitor.name}\n                                </Typography>\n                                <Typography variant=\"h6\" color=\"primary\">\n                                    Platz {competitor.rank}\n                                </Typography>\n                            </div>\n                            {active && (\n                                <>\n                                    <div className={classes.editor}>\n                                        <div className={classes.editorEntry}>\n                                            <TextField\n                                                id=\"filled-weight\"\n                                                label=\"Körpergewicht\"\n                                                type=\"number\"\n                                                variant=\"outlined\"\n                                                value={competitor.weight[activeEvent.id]}\n                                                onChange={event => dispatch(setWeight({\n                                                    eventId: activeEvent.id,\n                                                    competitorId: competitor.id,\n                                                    weight: event.target.value\n                                                }))}\n                                                margin=\"dense\"\n                                            />\n                                        </div>\n                                        {Object.keys(activeEvent.disciplines).filter(e => e !== Exceptional.GYMNASTICS).map(discipline => {\n                                            if (!activeEvent.disciplines[discipline]) {\n                                                return null;\n                                            }\n                                            const value = competitor.results[activeEvent.id]?.[discipline];\n                                            const weight = getWeight(competitor.year, competitor.gender, competitor.weight[activeEvent.id], discipline);\n                                            return (\n                                                <div key={discipline} className={classes.editorEntry}>\n                                                    <TextField\n                                                        id={`filled-${discipline}`}\n                                                        label={`${discipline}${weight ? ` ${weight} kg` : ''}`}\n                                                        type=\"number\"\n                                                        variant=\"filled\"\n                                                        value={value}\n                                                        onChange={event => dispatch(setResult({\n                                                            eventId: activeEvent.id,\n                                                            competitorId: competitor.id,\n                                                            discipline,\n                                                            result: event.target.value\n                                                        }))}\n                                                        margin={inputMargin}\n                                                    />\n                                                    <span className={`material-icons ${classes.editorIcon}`}>\n                                                        play_arrow\n                                                    </span>\n                                                    <Typography color=\"primary\" display=\"inline\" className={classes.editorPoints}>\n                                                        {value ? getPoints(discipline, value) : '--'}\n                                                    </Typography>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                    <GymnasticsList event={activeEvent} competitor={competitor} />\n                                    <CardActions className={classes.marginTop}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={() => {\n                                                dispatch(saveCompetitor(competitors.find(e => e.id === competitor.id)));\n                                                setActiveCompetitorId(0);\n                                            }}\n                                        >\n                                            Fertig\n                                        </Button>\n                                    </CardActions>\n                                </>\n                            )}\n                        </CardContent>\n                    </Card>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default WorkSpace;","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './BottomNavigation.module.css';\nimport { Fab } from '@material-ui/core';\nimport { SpeedDial, SpeedDialIcon, SpeedDialAction } from '@material-ui/lab';\nimport { ActiveContent, setActiveContent } from '../navigationSlice';\nimport { saveCompetitor } from '../../Competitors/competitorsSlice';\nimport { fetchPrint, PrintActionTypes } from '../../WorkSpace/WorkSpace';\nimport { getCenterContentStyle } from '../../../app/lib/getCenterContentStyle';\n\nconst actions = [\n    {\n        icon: <span className=\"material-icons\">event_note</span>,\n        name: 'Protokoll',\n        type: PrintActionTypes.PROTOCOL\n    },\n    {\n        icon: <span className=\"material-icons\">people_alt</span>,\n        name: 'Urkunden',\n        type: PrintActionTypes.CERTIFICATES\n    }\n];\n\n\nfunction BottomNavigation() {\n    const dispatch = useDispatch();\n    const activeContent = useSelector(state => state.navigation.activeContent);\n\n    const [ speedDialOpen, setSpeedDialOpen ] = useState(false);\n\n    let onCta = null;\n    let ctaIcon = '';\n    let ctaColor = '';\n\n    switch (activeContent) {\n        case ActiveContent.EVENT_LIST:\n            onCta = () => dispatch(setActiveContent(ActiveContent.EVENT_MANAGER));\n            ctaIcon = 'add';\n            ctaColor = 'primary';\n            break;\n        case ActiveContent.EVENT_MANAGER:\n            onCta = () => dispatch(setActiveContent(ActiveContent.EVENT_LIST));\n            ctaIcon = 'clear';\n            ctaColor = 'secondary';\n            break;\n        case ActiveContent.COMPETITOR_LIST:\n            onCta = () => dispatch(setActiveContent(ActiveContent.COMPETITOR_MANAGER));\n            ctaIcon = 'add';\n            ctaColor = 'primary';\n            break;\n        case ActiveContent.COMPETITOR_MANAGER:\n            onCta = () => {\n                dispatch(saveCompetitor());\n                dispatch(setActiveContent(ActiveContent.COMPETITOR_LIST));\n            };\n            ctaIcon = 'clear';\n            ctaColor = 'secondary';\n            break;\n        default:\n            ctaIcon = 'add';\n            ctaColor = 'primary';\n    }\n\n    return (\n        <footer\n            className={s.BottomNavigation}\n            style={getCenterContentStyle()}\n        >\n            <div className={s.Cta}>\n                {activeContent !== ActiveContent.WORK_SPACE && (\n                    <Fab\n                        color={ctaColor}\n                        aria-label=\"add\"\n                        onClick={onCta}\n                    >\n                        <span className=\"material-icons\">\n                            {ctaIcon}\n                        </span>\n                    </Fab>\n                )}\n                {activeContent === ActiveContent.WORK_SPACE && window.innerWidth > 576 && (\n                    <SpeedDial\n                        ariaLabel=\"SpeedDial example\"\n                        hidden={false}\n                        icon={<SpeedDialIcon/>}\n                        onClose={() => setSpeedDialOpen(false)}\n                        onOpen={() => setSpeedDialOpen(true)}\n                        open={speedDialOpen}\n                        direction=\"up\"\n                    >\n                        {actions.map(action => (\n                            <SpeedDialAction\n                                key={action.name}\n                                icon={action.icon}\n                                tooltipTitle={action.name}\n                                onClick={() => {\n                                    fetchPrint(action.type);\n                                    setSpeedDialOpen(false);\n                                }}\n                            />\n                        ))}\n                    </SpeedDial>\n                )}\n            </div>\n        </footer>\n    );\n}\n\nexport default BottomNavigation;","import { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, CardActions, Typography, Button, IconButton } from '@material-ui/core';\nimport { ActiveContent, setActiveContent } from '../../Navigation/navigationSlice';\nimport { deleteEvent, setEventId, editEvent, getEvents } from '../eventsSlice';\nimport { Exceptional } from '../../../app/lib/values';\nimport { isObject } from '../../../app/lib/helpers';\nimport { useListStyles } from '../../../app/styleHooks';\nimport useInterval from '../../../app/hooks/useInterval';\n\nconst refreshTime = 15;\n\n\nfunction EventList() {\n    const dispatch = useDispatch();\n    const events = useSelector(state => state.events.all);\n    const activeEventId = useSelector(state => state.events.activeId);\n    const classes = useListStyles();\n\n    const [ eventList, setEventList ] = useState([]);\n    const [ deleteIndex, setDeleteIndex ] = useState(-1);\n\n    const refresh = useCallback(() => dispatch(getEvents()), [ dispatch ]);\n    const getEventsOnMount = !isObject(events) || Object.keys(events).length === 0;  // only get events on mount if there's no current data set\n    useInterval(refreshTime, refresh, getEventsOnMount);\n\n    useEffect(() => {\n        if (!isObject(events)) {\n            return;\n        }\n        setEventList(\n            Object.values(events).sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n        );\n    }, [ events ]);\n\n    const onEdit = (e, id) => {\n        e.stopPropagation();\n        dispatch(editEvent(id));\n        dispatch(setActiveContent(ActiveContent.EVENT_MANAGER));\n    }\n\n    return (\n        <div>\n            {!!eventList.length && eventList.map((event, i) => {\n                const active = event.id === activeEventId;\n                return (\n                    <Card\n                        key={i}\n                        className={`${classes.card} ${active && classes.cardActive}`}\n                        elevation={3}\n                        onClick={() => dispatch(setEventId(event.id))}\n                        onDoubleClick={e => onEdit(e, event.id)}\n                    >\n                        <CardContent>\n                            <div className={classes.cardContent}>\n                                <div>\n                                    {event.final && (\n                                        <Typography variant=\"overline\" color=\"primary\" display=\"block\">\n                                            {`Jahresabschluss ${event.date.split('-')[0]}`}\n                                        </Typography>\n                                    )}\n                                    <Typography variant=\"overline\" color=\"textSecondary\" display=\"block\">\n                                        {event.date.split('-').reverse().join('.')} / {event.start} Uhr\n                                    </Typography>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        {event.name}\n                                    </Typography>\n                                </div>\n                                <CardActions className={classes.cardActions}>\n                                    {deleteIndex === i ? (\n                                        <>\n                                            <IconButton\n                                                className={active ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    setDeleteIndex(-1);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">clear</span>\n                                            </IconButton>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    dispatch(deleteEvent(event.id));\n                                                    setDeleteIndex(-1);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">delete</span>\n                                            </Button>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <IconButton\n                                                className={active ? classes.contrastText : ''}\n                                                onClick={e => onEdit(e, event.id)}\n                                            >\n                                                <span className=\"material-icons\">edit</span>\n                                            </IconButton>\n                                            <IconButton\n                                                className={active ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    setDeleteIndex(i);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">delete</span>\n                                            </IconButton>\n                                        </>\n                                    )}\n                                </CardActions>\n                            </div>\n                            {(event.place || event.host) && (\n                                <Typography variant=\"caption\" color=\"textSecondary\" display=\"block\" paragraph>\n                                    {`${event.place}${(event.place && event.host) ? ' | ' : ''}${event.host}`}\n                                </Typography>\n                            )}\n                            <Typography variant=\"body1\">\n                                {Object.keys(event.disciplines).reduce((r, e) => event.disciplines[e] ? `${r}${r.length ? ', ' : ''}${e}` : r, '')}\n                            </Typography>\n                            {event.disciplines[Exceptional.GYMNASTICS] && Object.keys(event.gymnastics).map(key => (\n                                <Typography key={key} variant=\"caption\" color=\"textSecondary\" display=\"block\">\n                                    <span className={classes.gymnasticsTag}>Turnen {key}:</span> {event.gymnastics[key]}\n                                </Typography>\n                            ))}\n                        </CardContent>\n                    </Card>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default EventList;","export function parseCommaSeparation(input) {\n    const matchDoubleSpace = /\\s+/gm;\n    const matchCommaSpaces = /[,\\s]*,[,\\s]*/gm;\n    return input\n        .replace(matchDoubleSpace, ' ')\n        .replace(matchCommaSpaces, ', ');\n}","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    FormGroup,\n    TextField,\n    Switch\n} from '@material-ui/core';\nimport {\n    saveEvent,\n    resetEvents,\n    setName,\n    setDate,\n    setPlace,\n    setHost,\n    setStart,\n    toggleDiscipline,\n    setGymnastics,\n    toggleFinal\n} from '../eventsSlice';\nimport { ActiveContent, setActiveContent } from '../../Navigation/navigationSlice';\nimport { AgesPerGroup, Exceptional } from '../../../app/lib/values';\nimport { getBirthYear } from '../../../app/lib/year';\nimport { useManagerStyles } from '../../../app/styleHooks';\nimport { parseCommaSeparation } from './util';\n\nconst marginProp = 'dense';\n\n\nfunction EventManager() {\n    const dispatch = useDispatch();\n    const id = useSelector(state => state.events.draft.id);\n    const name = useSelector(state => state.events.draft.name);\n    const date = useSelector(state => state.events.draft.date);\n    const place = useSelector(state => state.events.draft.place);\n    const host = useSelector(state => state.events.draft.host);\n    const start = useSelector(state => state.events.draft.start);\n    const final = useSelector(state => state.events.draft.final);\n    const disciplines = useSelector(state => state.events.draft.disciplines);\n    const gymnastics = useSelector(state => state.events.draft.gymnastics);\n    const competitorIds = useSelector(state => state.events.draft.competitorIds);\n\n    const classes = useManagerStyles();\n\n    useEffect(() => () => dispatch(resetEvents()), [ dispatch ]);\n\n    const saveAndExit = () => {\n        const parsedGymnastics = {};\n        Object.keys(gymnastics).forEach(key => {\n            parsedGymnastics[key] = parseCommaSeparation(gymnastics[key]);\n        });\n        dispatch(saveEvent({\n            id,\n            name,\n            date,\n            place,\n            host,\n            start,\n            final,\n            disciplines,\n            gymnastics: parsedGymnastics,\n            competitorIds\n        }));\n        dispatch(setActiveContent(ActiveContent.EVENT_LIST));\n    };\n\n    return (\n        <Card\n            elevation={3}\n            className={classes.card}\n            onKeyDown={event => {\n                if (event.key !== 'Enter') {\n                    return;\n                }\n                saveAndExit();\n            }}\n        >\n            <CardContent>\n                <form noValidate autoComplete=\"off\">\n                    <div className={classes.flexRow}>\n                        <TextField\n                            id=\"filled-name\"\n                            label=\"Wettbewerb\"\n                            variant=\"filled\"\n                            value={name}\n                            onChange={event => dispatch(setName(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                        />\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={final}\n                                    onChange={() => dispatch(toggleFinal())}\n                                    name=\"Jahresabschluss\"\n                                    color=\"primary\"\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                />\n                            }\n                            label=\"Jahresab.\"\n                            labelPlacement=\"top\"\n                        />\n                    </div>\n                    <div className={classes.flexRow}>\n                        <TextField\n                            id=\"date\"\n                            label=\"Datum\"\n                            type=\"date\"\n                            variant=\"filled\"\n                            value={date}\n                            onChange={event => dispatch(setDate(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                        />\n                        <div className={classes.spacer} />\n                        <TextField\n                            id=\"time\"\n                            label=\"Beginn\"\n                            type=\"time\"\n                            variant=\"filled\"\n                            value={start}\n                            onChange={event => dispatch(setStart(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                            inputProps={{\n                                step: 300, // 5 min\n                            }}\n                        />\n                    </div>\n                    <div className={classes.flexRow}>\n                        <TextField\n                            id=\"filled-place\"\n                            label=\"Wettkampf Ort\"\n                            variant=\"filled\"\n                            value={place}\n                            onChange={event => dispatch(setPlace(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                        />\n                        <div className={classes.spacer} />\n                        <TextField\n                            id=\"filled-host\"\n                            label=\"Ausrichter\"\n                            variant=\"filled\"\n                            value={host}\n                            onChange={event => dispatch(setHost(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                        />\n                    </div>\n\n                    <FormGroup row>\n                        {Object.keys(disciplines).map(key => (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={disciplines[key]}\n                                        onChange={() => dispatch(toggleDiscipline(key))}\n                                        name={key}\n                                        color={key === Exceptional.GYMNASTICS ? 'primary' : 'secondary'}\n                                    />\n                                }\n                                label={key}\n                                key={key}\n                            />\n                        ))}\n                    </FormGroup>\n\n                    {disciplines[Exceptional.GYMNASTICS] && Object.keys(gymnastics).map(key => {\n                        const ages = AgesPerGroup[key];\n                        return (\n                            <div key={key} className={classes.marginTop}>\n                                <h3>{`Turnen ${key} (Jahrgang ${getBirthYear(ages[ages.length - 1])} - ${getBirthYear(ages[0])})`}</h3>\n                                <TextField\n                                    id=\"outlined-multiline-flexible\"\n                                    label=\"Übungen\"\n                                    multiline\n                                    rowsMax={4}\n                                    variant=\"outlined\"\n                                    value={gymnastics[key]}\n                                    onChange={event => dispatch(setGymnastics({ group: key, gymnastics: event.target.value }))}\n                                    margin={marginProp}\n                                    fullWidth\n                                />\n                            </div>\n                        );\n                    })}\n\n                    <CardActions className={classes.marginTop}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={saveAndExit}\n                        >\n                            Fertig\n                        </Button>\n                    </CardActions>\n                </form>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default EventManager;","import { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, CardActions, Typography, Button, IconButton } from '@material-ui/core';\nimport { ActiveContent, setActiveContent } from '../../Navigation/navigationSlice';\nimport { saveEvent, addCompetitorId, removeCompetitorId } from '../../Events/eventsSlice';\nimport { deleteCompetitor, editCompetitor, getCompetitors } from '../competitorsSlice';\nimport { useListStyles } from '../../../app/styleHooks';\nimport { selectActiveEvent } from '../../../app/selectors';\nimport { defaultValues, isObject } from '../../../app/lib/helpers';\nimport useInterval from '../../../app/hooks/useInterval';\n\nconst refreshTime = 15;\n\n\nfunction CompetitorList() {\n    const dispatch = useDispatch();\n    const competitors = useSelector(state => state.competitors.all);\n    const activeEvent = useSelector(selectActiveEvent);\n    const selectedCompetitorIds = activeEvent.competitorIds || defaultValues.ARRAY;\n\n    const classes = useListStyles();\n\n    const [ competitorList, setCompetitorList ] = useState([]);\n    const [ deleteIndex, setDeleteIndex ] = useState(-1);\n    const [ doSave, setDoSave ] = useState(false);\n\n    const refresh = useCallback(() => dispatch(getCompetitors()), [ dispatch ]);\n    const getCompetitorsOnMount = !isObject(competitors) || Object.keys(competitors).length === 0; // only get competitors on mount if there's no current data set\n    useInterval(refreshTime, refresh, getCompetitorsOnMount);\n\n    useEffect(() => {\n        if (!isObject(competitors)) {\n            return;\n        }\n        setCompetitorList(\n            Object.values(competitors).sort((a, b) => a.name.charCodeAt(0) - b.name.charCodeAt(0))\n        );\n    }, [ competitors ]);\n\n    useEffect(() => {\n        if (!doSave) {\n            return;\n        }\n        dispatch(saveEvent(activeEvent));\n        setDoSave(false);\n    }, [ dispatch, activeEvent, doSave ]);\n\n    return (\n        <div>\n            {!!competitorList.length && competitorList.map((competitor, i) => {\n                const noActiveEvent = !activeEvent.id;\n                const selected = selectedCompetitorIds.includes(competitor.id);\n                return (\n                    <Card\n                        key={i}\n                        className={`${classes.card} ${selected && classes.cardActive}`}\n                        elevation={3}\n                        onClick={() => {\n                            if (noActiveEvent) {\n                                return;\n                            }\n                            dispatch(selected ? removeCompetitorId(competitor.id) : addCompetitorId(competitor.id));\n                            setDoSave(true);\n                        }}\n                    >\n                        <CardContent>\n                            <div className={classes.cardContent}>\n                                <div>\n                                    <Typography variant=\"overline\" color=\"textSecondary\" display=\"block\">\n                                        {`${competitor.year} | ${competitor.gender}`}\n                                    </Typography>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        {competitor.name}\n                                    </Typography>\n                                </div>\n                                <CardActions className={classes.cardActions}>\n                                    {deleteIndex === i ? (\n                                        <>\n                                            <IconButton\n                                                className={selected ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    setDeleteIndex(-1);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">clear</span>\n                                            </IconButton>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    dispatch(deleteCompetitor(competitor.id));\n                                                    setDeleteIndex(-1);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">delete</span>\n                                            </Button>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <IconButton\n                                                className={selected ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    dispatch(editCompetitor(competitor.id));\n                                                    dispatch(setActiveContent(ActiveContent.COMPETITOR_MANAGER));\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">edit</span>\n                                            </IconButton>\n                                            <IconButton\n                                                className={selected ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    setDeleteIndex(i);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">delete</span>\n                                            </IconButton>\n                                        </>\n                                    )}\n                                </CardActions>\n                            </div>\n                            <Typography variant=\"caption\" color=\"textSecondary\" display=\"block\">\n                                {competitor.club || 'Kein Verein'}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default CompetitorList;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, CardActions, Button, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport {\n    resetCompetitors,\n    setName,\n    setGender,\n    setYear,\n    setClub,\n    saveCompetitor\n} from '../competitorsSlice';\nimport { ActiveContent, setActiveContent } from '../../Navigation/navigationSlice';\nimport { Gender, Ages } from '../../../app/lib/values';\nimport { getBirthYear } from '../../../app/lib/year';\nimport { useManagerStyles } from '../../../app/styleHooks';\nimport { parseCommaSeparation } from '../../Events/EventManager/util';\n\nconst marginProp = 'dense';\n\n\nfunction CompetitorManager() {\n    const dispatch = useDispatch();\n    const id = useSelector(state => state.competitors.draft.id);\n    const name = useSelector(state => state.competitors.draft.name);\n    const gender = useSelector(state => state.competitors.draft.gender);\n    const year = useSelector(state => state.competitors.draft.year);\n    const weight = useSelector(state => state.competitors.draft.weight);\n    const club = useSelector(state => state.competitors.draft.club);\n    const results = useSelector(state => state.competitors.draft.results);\n\n    const classes = useManagerStyles();\n\n    useEffect(() => () => dispatch(resetCompetitors()), [ dispatch ]);\n\n    const saveAndExit = () => {\n        dispatch(saveCompetitor({\n            id,\n            name: parseCommaSeparation(name),\n            gender,\n            year,\n            weight,\n            club: parseCommaSeparation(club),\n            results\n        }));\n        dispatch(setActiveContent(ActiveContent.COMPETITOR_LIST));\n    };\n\n    return (\n        <Card\n            elevation={3}\n            className={classes.card}\n            onKeyDown={event => {\n                if (event.key !== 'Enter') {\n                    return;\n                }\n                saveAndExit();\n            }}\n        >\n            <CardContent>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"filled-name\"\n                        label=\"Name\"\n                        variant=\"filled\"\n                        value={name}\n                        onChange={event => dispatch(setName(event.target.value))}\n                        margin={marginProp}\n                        fullWidth\n                    />\n                    <TextField\n                        id=\"filled-club\"\n                        label=\"Verein\"\n                        variant=\"filled\"\n                        value={club}\n                        onChange={event => dispatch(setClub(event.target.value))}\n                        margin={marginProp}\n                        fullWidth\n                    />\n                    <div className={classes.gridRow}>\n                        <FormControl margin={marginProp}>\n                            <InputLabel id=\"demo-simple-select-label-gender\">Geschlecht</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label-gender\"\n                                id=\"demo-simple-select-gender\"\n                                value={gender}\n                                onChange={event => dispatch(setGender(event.target.value))}\n                            >\n                                {Object.values(Gender).map(e => (\n                                    <MenuItem key={e} value={e}>{e}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <FormControl margin={marginProp}>\n                            <InputLabel id=\"demo-simple-select-label-year\">Jahrgang</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label-year\"\n                                id=\"demo-simple-select-year\"\n                                value={year}\n                                onChange={event => dispatch(setYear(event.target.value))}\n                            >\n                                {Ages.map(age => getBirthYear(age)).map(e => (\n                                    <MenuItem key={e} value={e}>{e}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n\n                    <CardActions className={classes.marginTop}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={saveAndExit}\n                        >\n                            Fertig\n                        </Button>\n                    </CardActions>\n                </form>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default CompetitorManager;","import { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, Typography } from '@material-ui/core';\n\n\nfunction NoInternetWall() {\n    const [ open, setOpen ] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener('offline', () => setOpen(true));\n        window.addEventListener('online', () => setOpen(false));\n    }, []);\n\n    return (\n        <Dialog open={open} onClose={() => {}} aria-labelledby=\"form-dialog-title\">\n            <DialogContent>\n                <Typography>\n                    Kein Internet\n                </Typography>\n                <div style={{ textAlign: 'center' }}>\n                    <span className=\"material-icons\">perm_scan_wifi</span>\n                </div>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default NoInternetWall;","import { getCenterContentStyle } from '../../app/lib/getCenterContentStyle';\nimport styles from './MainView.module.css';\n\n\nfunction MainView({ children }) {\n    return (\n        <div\n            className={styles.MainView}\n            style={getCenterContentStyle()}\n        >\n            {children}\n        </div>\n    );\n}\n\nexport default MainView;","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ActiveContent } from './features/Navigation/navigationSlice';\nimport { selectActiveEvent } from './app/selectors';\n\nimport AuthWall from './features/AuthWall/AuthWall';\nimport TopNavigation from './features/Navigation/TopNavigation/TopNavigation';\nimport BottomNavigation from './features/Navigation/BottomNavigation/BottomNavigation';\nimport EventList from './features/Events/EventList/EventList';\nimport EventManager from './features/Events/EventManager/EventManager';\nimport CompetitorList from './features/Competitors/CompetitorList/CompetitorList';\nimport CompetitorManager from './features/Competitors/CompetitorManager/CompetitorManager';\nimport WorkSpace from './features/WorkSpace/WorkSpace';\nimport NoInternetWall from './features/NoInternetWall/NoInternetWall';\nimport MainView from './features/MainView/MainView';\n\nconst mainView = {\n    [ActiveContent.EVENT_LIST]: <EventList />,\n    [ActiveContent.EVENT_MANAGER]: <EventManager />,\n    [ActiveContent.COMPETITOR_LIST]: <CompetitorList />,\n    [ActiveContent.COMPETITOR_MANAGER]: <CompetitorManager />,\n    [ActiveContent.WORK_SPACE]: <WorkSpace />\n};\n\n\nfunction App() {\n    const activeEvent = useSelector(selectActiveEvent);\n    const activeEventName = activeEvent.name || '';\n    const activeContent = useSelector(state => state.navigation.activeContent);\n\n    const [ , triggerRerender ] = useState(false);\n\n    useEffect(() => {\n        const resize = () => triggerRerender(prevState => !prevState);\n        window.addEventListener('resize', resize);\n        return () => window.removeEventListener('resize', resize);\n    }, []);\n\n    useEffect(() => {\n        if (!activeEventName) {\n            document.title = 'TSC';\n            return;\n        }\n        document.title = activeEventName;\n    }, [ activeEventName ]);\n\n    return (\n        <>\n            <AuthWall />\n            <NoInternetWall />\n            <TopNavigation />\n            <MainView>\n                {mainView[activeContent]}\n            </MainView>\n            <BottomNavigation />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport reducer from './app/reducer';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={configureStore({ reducer })}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopNavigation\":\"TopNavigation_TopNavigation__1sjDd\",\"TopNavigationStepper\":\"TopNavigation_TopNavigationStepper__3xFMu\",\"TopNavigationSpacer\":\"TopNavigation_TopNavigationSpacer__1GvRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BottomNavigation\":\"BottomNavigation_BottomNavigation__2CoWW\",\"Cta\":\"BottomNavigation_Cta__1wAwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainView\":\"MainView_MainView__1sxw3\"};"],"sourceRoot":""}